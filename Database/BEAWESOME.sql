echo on;

CREATE TABLE BUYER
  (
    BUYER_ID CHAR
    --  WARNING: CHAR size not specified
    NOT NULL ,
    FIRST_NAME          CHAR (10) ,
    LAST_NAME           CHAR (10) ,
    STREET              CHAR (20) ,
    CITY                CHAR (10) ,
    STATE               CHAR (2) ,
    ZIP                 CHAR (7) ,
    SALE_INVOICE_NUMBER CHAR
    --  WARNING: CHAR size not specified
    NOT NULL ,
    PATRON_PATRON_ID CHAR
    --  WARNING: CHAR size not specified
  ) ;
CREATE UNIQUE INDEX BUYER__IDX ON BUYER
  (
    PATRON_PATRON_ID ASC
  )
  ;
ALTER TABLE BUYER ADD CONSTRAINT BUYER_PK PRIMARY KEY ( BUYER_ID ) ;


CREATE TABLE CAST
  (
    CHARACTER         CHAR (30) ,
    MEMBERS_MEMBER_ID CHAR
    --  WARNING: CHAR size not specified
    NOT NULL ,
    CAST_ID NUMBER NOT NULL
  ) ;
ALTER TABLE CAST ADD CONSTRAINT CAST_PK PRIMARY KEY ( CAST_ID ) ;


CREATE TABLE COST
  (
    AMOUNT                   NUMBER ,
    REASON                   CHAR (30) ,
    PRODUCTION_PRODUCTION_ID CHAR
    --  WARNING: CHAR size not specified
  ) ;


CREATE TABLE COUNCILMAN
  (
    POSTITION         CHAR (10) ,
    YEAR              CHAR (4) ,
    MEMBERS_MEMBER_ID CHAR
    --  WARNING: CHAR size not specified
    NOT NULL
  ) ;


CREATE TABLE DUES
  (
    PAID_FULL         CHAR (1) ,
    PAID_AMOUNT       NUMBER ,
    YEAR              CHAR (4) ,
    MEMBERS_MEMBER_ID CHAR
    --  WARNING: CHAR size not specified
    NOT NULL
  ) ;


CREATE TABLE MEMBERS
  (
    MEMBER_ID CHAR
    --  WARNING: CHAR size not specified
    NOT NULL ,
    FIRST_NAME       CHAR (10) ,
    LAST_NAME        CHAR (10) ,
    ROLE             CHAR (10) ,
    PHONE            CHAR (10) ,
    EMAIL            CHAR (20) ,
    STREET           CHAR (20) ,
    CITY             CHAR (10) ,
    STATE            CHAR (2) ,
    ZIP              CHAR (7) ,
    JOIN_DATE        DATE ,
    ACTIVE           CHAR (1)
  ) ;
ALTER TABLE MEMBERS ADD CONSTRAINT MEMBERS_PK PRIMARY KEY ( MEMBER_ID ) ;


CREATE TABLE PATRON
  (
    PATRON_ID CHAR
    --  WARNING: CHAR size not specified
    NOT NULL ,
    FIRST_NAME     CHAR (10) ,
    LAST_NAME      CHAR (10) ,
    PHONE            CHAR (10) ,
    EMAIL            CHAR (20) ,
    STREET         CHAR (10) ,
    CITY           CHAR (10) ,
    STATE          CHAR (2) ,
    ZIP            CHAR (7) ,
    BUYER_BUYER_ID CHAR
    --  WARNING: CHAR size not specified
  ) ;
CREATE UNIQUE INDEX PATRON__IDX ON PATRON
  (
    BUYER_BUYER_ID ASC
  )
  ;
ALTER TABLE PATRON ADD CONSTRAINT PATRON_PK PRIMARY KEY ( PATRON_ID ) ;


CREATE TABLE PLAY
  (
    PLAY_ID CHAR
    --  WARNING: CHAR size not specified
    NOT NULL ,
    NAME              CHAR (50) ,
    ACTS              NUMBER ,
    AUTHOR_FIRST_NAME CHAR (10) ,
    AUTHOR_LAST_NAME  CHAR (10) ,
    TYPE              CHAR (8)
  ) ;
ALTER TABLE PLAY ADD CONSTRAINT PLAY_PK PRIMARY KEY ( PLAY_ID ) ;


CREATE TABLE PRODUCER
  (
    MEMBERS_MEMBER_ID CHAR
    --  WARNING: CHAR size not specified
    NOT NULL ,
    PRODUCTION_PRODUCTION_ID CHAR
    --  WARNING: CHAR size not specified
    NOT NULL ,
    PRODUCER_ID NUMBER NOT NULL
  ) ;
CREATE UNIQUE INDEX PRODUCER__IDX ON PRODUCER
  (
    MEMBERS_MEMBER_ID ASC
  )
  ;
CREATE UNIQUE INDEX PRODUCER__IDXv1 ON PRODUCER
  (
    PRODUCTION_PRODUCTION_ID ASC
  )
  ;
ALTER TABLE PRODUCER ADD CONSTRAINT PRODUCER_PK PRIMARY KEY ( PRODUCER_ID ) ;


CREATE TABLE PRODUCTION
  (
    PRODUCTION_ID CHAR
    --  WARNING: CHAR size not specified
    NOT NULL ,
    "DATE"       DATE ,
    EVALUATION   CHAR (5) ,
    PLAY_PLAY_ID CHAR
    --  WARNING: CHAR size not specified
    ,
    SPONSOR_SPONSOR_ID   NUMBER NOT NULL ,
    CAST_CAST_ID         NUMBER NOT NULL ,
    PRODUCER_PRODUCER_ID NUMBER NOT NULL
  ) ;
CREATE UNIQUE INDEX PRODUCTION__IDX ON PRODUCTION
  (
    PRODUCER_PRODUCER_ID ASC
  )
  ;
ALTER TABLE PRODUCTION ADD CONSTRAINT PRODUCTION_PK PRIMARY KEY ( PRODUCTION_ID ) ;


CREATE TABLE SPONSORED
  (
    SPONSOR_SPONSOR_ID       NUMBER NOT NULL ,
    PRODUCTION_PRODUCTION_ID CHAR
    --  WARNING: CHAR size not specified
    NOT NULL
  ) ;
ALTER TABLE SPONSORED ADD CONSTRAINT SPONSORED_14_PK PRIMARY KEY ( SPONSOR_SPONSOR_ID, PRODUCTION_PRODUCTION_ID ) ;


CREATE TABLE PRODUCTION_CAST
  (
    CAST_CAST_ID             NUMBER NOT NULL ,
    PRODUCTION_PRODUCTION_ID CHAR
    --  WARNING: CHAR size not specified
    NOT NULL
  ) ;
ALTER TABLE PRODUCTION_CAST ADD CONSTRAINT PRODUCTION_CAST_PK PRIMARY KEY ( CAST_CAST_ID, PRODUCTION_PRODUCTION_ID ) ;


CREATE TABLE SALE
  (
    INVOICE_NUMBER CHAR
    --  WARNING: CHAR size not specified
    NOT NULL ,
    "DATE" DATE
  ) ;
ALTER TABLE SALE ADD CONSTRAINT SALE_PK PRIMARY KEY ( INVOICE_NUMBER ) ;


CREATE TABLE SPECIALIST
  (
    SPECIALIST_ID CHAR
    --  WARNING: CHAR size not specified
    NOT NULL ,
    FIRST_NAME       CHAR (10) ,
    LAST_NAME        CHAR (10) ,
    PAY              NUMBER ,
    WORKER_WORKER_ID NUMBER
  ) ;
ALTER TABLE SPECIALIST ADD CONSTRAINT SPECIALIST_PK PRIMARY KEY ( SPECIALIST_ID ) ;


CREATE TABLE SPONSOR
  (
    NAME       CHAR (20) ,
    DONATION   NUMBER ,
    SPONSOR_ID NUMBER NOT NULL
  ) ;
ALTER TABLE SPONSOR ADD CONSTRAINT SPONSOR_PK PRIMARY KEY ( SPONSOR_ID ) ;


CREATE TABLE TICKET
  (
    TICKET_ID CHAR
    --  WARNING: CHAR size not specified
    NOT NULL ,
    PRICE                    NUMBER ,
    SEATNUM                  CHAR (5) ,
    PRODUCTION_PRODUCTION_ID CHAR
    --  WARNING: CHAR size not specified
    NOT NULL ,
    SALE_INVOICE_NUMBER CHAR
    --  WARNING: CHAR size not specified
    NOT NULL
  ) ;
ALTER TABLE TICKET ADD CONSTRAINT TICKET_PK PRIMARY KEY ( TICKET_ID ) ;


CREATE TABLE WORKER
  (
    JOB                      CHAR (20) ,
    PRODUCTION_PRODUCTION_ID CHAR
    --  WARNING: CHAR size not specified
    ,
    WORKER_ID NUMBER NOT NULL
  ) ;
ALTER TABLE WORKER ADD CONSTRAINT WORKER_PK PRIMARY KEY ( WORKER_ID ) ;


CREATE TABLE WORKING_MEM
  (
    MEMBERS_MEMBER_ID CHAR
    --  WARNING: CHAR size not specified
    NOT NULL ,
    WORKER_WORKER_ID NUMBER NOT NULL
  ) ;
ALTER TABLE WORKING_MEM ADD CONSTRAINT WORKING_MEM_PK PRIMARY KEY ( MEMBERS_MEMBER_ID, WORKER_WORKER_ID ) ;


CREATE TABLE WORKING_SPEC
  (
    WORKER_WORKER_ID         NUMBER NOT NULL ,
    SPECIALIST_SPECIALIST_ID CHAR
    --  WARNING: CHAR size not specified
    NOT NULL
  ) ;
ALTER TABLE WORKING_SPEC ADD CONSTRAINT WORKING_SPEC_PK PRIMARY KEY ( WORKER_WORKER_ID, SPECIALIST_SPECIALIST_ID ) ;


ALTER TABLE BUYER ADD CONSTRAINT BUYER_PATRON_FK FOREIGN KEY ( PATRON_PATRON_ID ) REFERENCES PATRON ( PATRON_ID ) ;

ALTER TABLE BUYER ADD CONSTRAINT BUYER_SALE_FK FOREIGN KEY ( SALE_INVOICE_NUMBER ) REFERENCES SALE ( INVOICE_NUMBER ) ;

ALTER TABLE CAST ADD CONSTRAINT CAST_MEMBERS_FK FOREIGN KEY ( MEMBERS_MEMBER_ID ) REFERENCES MEMBERS ( MEMBER_ID ) ;

ALTER TABLE COST ADD CONSTRAINT COST_PRODUCTION_FK FOREIGN KEY ( PRODUCTION_PRODUCTION_ID ) REFERENCES PRODUCTION ( PRODUCTION_ID ) ;

ALTER TABLE COUNCILMAN ADD CONSTRAINT COUNCILMAN_MEMBERS_FK FOREIGN KEY ( MEMBERS_MEMBER_ID ) REFERENCES MEMBERS ( MEMBER_ID ) ;

ALTER TABLE DUES ADD CONSTRAINT DUES_MEMBERS_FK FOREIGN KEY ( MEMBERS_MEMBER_ID ) REFERENCES MEMBERS ( MEMBER_ID ) ;

ALTER TABLE PRODUCTION_CAST ADD CONSTRAINT FK_ASS_14 FOREIGN KEY ( CAST_CAST_ID ) REFERENCES CAST ( CAST_ID ) ;

ALTER TABLE PRODUCTIION_CAST ADD CONSTRAINT FK_ASS_15 FOREIGN KEY ( PRODUCTION_PRODUCTION_ID ) REFERENCES PRODUCTION ( PRODUCTION_ID ) ;

ALTER TABLE WORKING_MEM ADD CONSTRAINT FK_ASS_23 FOREIGN KEY ( MEMBERS_MEMBER_ID ) REFERENCES MEMBERS ( MEMBER_ID ) ;

ALTER TABLE WORKING_MEM ADD CONSTRAINT FK_ASS_24 FOREIGN KEY ( WORKER_WORKER_ID ) REFERENCES WORKER ( WORKER_ID ) ;

ALTER TABLE WORKING_SPEC ADD CONSTRAINT FK_ASS_27 FOREIGN KEY ( WORKER_WORKER_ID ) REFERENCES WORKER ( WORKER_ID ) ;

ALTER TABLE WORKING_SPEC ADD CONSTRAINT FK_ASS_28 FOREIGN KEY ( SPECIALIST_SPECIALIST_ID ) REFERENCES SPECIALIST ( SPECIALIST_ID ) ;

ALTER TABLE SPONSORED ADD CONSTRAINT FK_ASS_4 FOREIGN KEY ( SPONSOR_SPONSOR_ID ) REFERENCES SPONSOR ( SPONSOR_ID ) ;

ALTER TABLE SPONSORED ADD CONSTRAINT FK_ASS_5 FOREIGN KEY ( PRODUCTION_PRODUCTION_ID ) REFERENCES PRODUCTION ( PRODUCTION_ID ) ;

ALTER TABLE PATRON ADD CONSTRAINT PATRON_BUYER_FK FOREIGN KEY ( BUYER_BUYER_ID ) REFERENCES BUYER ( BUYER_ID ) ;

ALTER TABLE PRODUCER ADD CONSTRAINT PRODUCER_MEMBERS_FK FOREIGN KEY ( MEMBERS_MEMBER_ID ) REFERENCES MEMBERS ( MEMBER_ID ) ;

ALTER TABLE PRODUCER ADD CONSTRAINT PRODUCER_PRODUCTION_FK FOREIGN KEY ( PRODUCTION_PRODUCTION_ID ) REFERENCES PRODUCTION ( PRODUCTION_ID ) ;

ALTER TABLE PRODUCTION ADD CONSTRAINT PRODUCTION_PLAY_FK FOREIGN KEY ( PLAY_PLAY_ID ) REFERENCES PLAY ( PLAY_ID ) ;

ALTER TABLE PRODUCTION ADD CONSTRAINT PRODUCTION_PRODUCER_FK FOREIGN KEY ( PRODUCER_PRODUCER_ID ) REFERENCES PRODUCER ( PRODUCER_ID ) ;

ALTER TABLE PRODUCTION ADD CONSTRAINT SPONSORED FOREIGN KEY ( SPONSOR_SPONSOR_ID ) REFERENCES SPONSOR ( SPONSOR_ID ) ;

ALTER TABLE PRODUCTION ADD CONSTRAINT PRODUCTION_CAST FOREIGN KEY ( CAST_CAST_ID ) REFERENCES CAST ( CAST_ID ) ;

ALTER TABLE TICKET ADD CONSTRAINT TICKET_PRODUCTION_FK FOREIGN KEY ( PRODUCTION_PRODUCTION_ID ) REFERENCES PRODUCTION ( PRODUCTION_ID ) ;

ALTER TABLE TICKET ADD CONSTRAINT TICKET_SALE_FK FOREIGN KEY ( SALE_INVOICE_NUMBER ) REFERENCES SALE ( INVOICE_NUMBER ) ;

ALTER TABLE WORKER ADD CONSTRAINT WORKER_PRODUCTION_FK FOREIGN KEY ( PRODUCTION_PRODUCTION_ID ) REFERENCES PRODUCTION ( PRODUCTION_ID ) ;

ALTER TABLE SPECIALIST ADD CONSTRAINT WORKING_SPEC FOREIGN KEY ( WORKER_WORKER_ID ) REFERENCES WORKER ( WORKER_ID ) ;

CREATE SEQUENCE CAST_CAST_ID_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER CAST_CAST_ID_TRG BEFORE
  INSERT ON CAST FOR EACH ROW WHEN (NEW.CAST_ID IS NULL) BEGIN :NEW.CAST_ID := CAST_CAST_ID_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE PRODUCER_PRODUCER_ID_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER PRODUCER_PRODUCER_ID_TRG BEFORE
  INSERT ON PRODUCER FOR EACH ROW WHEN (NEW.PRODUCER_ID IS NULL) BEGIN :NEW.PRODUCER_ID := PRODUCER_PRODUCER_ID_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE SPONSOR_SPONSOR_ID_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER SPONSOR_SPONSOR_ID_TRG BEFORE
  INSERT ON SPONSOR FOR EACH ROW WHEN (NEW.SPONSOR_ID IS NULL) BEGIN :NEW.SPONSOR_ID := SPONSOR_SPONSOR_ID_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE WORKER_WORKER_ID_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER WORKER_WORKER_ID_TRG BEFORE
  INSERT ON WORKER FOR EACH ROW WHEN (NEW.WORKER_ID IS NULL) BEGIN :NEW.WORKER_ID := WORKER_WORKER_ID_SEQ.NEXTVAL;
END;

--Setting Up Tables Above

 --Plays Insert
INSERT INTO PLAY VALUES(0, 'MacBeth', 5, 'William', 'Shakespear', 'Tragety');

INSERT INTO PLAY VALUES(1, 'Romeo and Juliet', 5, 'William', 'Shakespear', 'Romance');

INSERT INTO PLAY VALUES(2, 'Hamlet', 5, 'William', 'Shakespear', 'Tragedy');

INSERT INTO PLAY VALUES(3, 'The Importance of Being Earnest', 5, 'Oscar',
'Wilde', 'Comedy');

INSERT INTO PLAY VALUES(4, 'The Crucible', 5, 'Arthur', 'Miller', 'Tragedy');

--Members Insert
INSERT INTO MEMBERS VALUES(0, 'Bob', 'Bobberton', 'Actor', '1234567891', 
'bboberton@gmail.com', '1 First St', 'Bobsville', 'NC', '28941', '11-OCT-16', '1');

INSERT INTO MEMBERS VALUES(1, 'Han', 'Some', 'Actor', '4658746454', 
'iamhansome@gmail.com', '5 Lane Drive', 'Zeville', 'NC', '26592', '1-JAN-5', '1');

INSERT INTO MEMBERS VALUES(2, 'Pattie', 'McCake', 'Actor', '546554135', 
'pattiecakes@mail.com', '8 Bakersfield Lane', 'Zeville', 'NC', '26592', '1-JAN-30', '1');

INSERT INTO MEMBERS VALUES(3, 'Strong', 'McLifts', 'Worker', '5546817654', 
'pickstuffup@mail.com', '85 Weight Ave', 'Liftston', 'NC', '26592', '15-MAY-15', '1');

INSERT INTO MEMBERS VALUES(4, 'Britney', 'Lights', 'Worker', '8952135648', 
'brightlight@mail.com', '55 Blind St', 'Bobsville', 'NC', '28941', '2-APR-12', '1');

INSERT INTO MEMBERS VALUES(5, 'Quinton', 'Quits', 'Worker', '546876135', 
'quintonquit@mail.com', '1 Left Lane', 'Zeville', 'NC', '26592', '5-NOV-01', '0');


 
 